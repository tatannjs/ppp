name: PHP CD

on:
  workflow_run:
    workflows: ["PHP CI"]
    types:
      - completed

jobs:
  deploy:
    if: >
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: |
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      # Copie uniquement le dossier public/ vers le dossier public_html
      - name: Rsync public/ -> public_html
        run: |
          SSH_PORT="${{ secrets.SSH_PORT }}"
          HOST="${{ secrets.HOST }}"
          HOST_USER="${{ secrets.HOST_USER }}"
          DEPLOY_PATH="${{ secrets.PATH }}"

          rsync -avz --delete -e "ssh -p $SSH_PORT" \
          ./public/ \
          "$HOST_USER@$HOST:$DEPLOY_PATH/public_html/"

      # Copie le reste du projet (hors vendor/, public/, .github/)
      - name: Rsync other files -> app_code
        run: |
          SSH_PORT="${{ secrets.SSH_PORT }}"
          HOST="${{ secrets.HOST }}"
          HOST_USER="${{ secrets.HOST_USER }}"
          DEPLOY_PATH="${{ secrets.PATH }}"

          rsync -avz -e "ssh -p $SSH_PORT" \
            --exclude='public/' \
            --exclude='.github/' \
            --exclude='vendor/' \
            ./ \
            "$HOST_USER@$HOST:$DEPLOY_PATH"

      - name: Remote post-deploy commands
        run: |
          SSH_PATH="${{ secrets.PATH }}"
          APP_SECRET="${{ secrets.APP_SECRET }}"
          SSH_PORT="${{ secrets.SSH_PORT }}"
          HOST="${{ secrets.HOST }}"
          HOST_USER="${{ secrets.HOST_USER }}"
          ssh -p $SSH_PORT $HOST_USER@$HOST << EOF
            cd $SSH_PATH

            # Installer les dépendances
            composer install --no-dev --optimize-autoloader

            # Création du fichier .env minimal
            rm -f .env.local
            touch .env.local
            # Remplir le fichier .env.local avec les variables d'environnement
            echo "APP_ENV=prod" > .env.local
            echo "APP_DEBUG=0" >> .env.local
            echo "APP_SECRET=$APP_SECRET" >> .env.local

            # Copier les assets Symfony dans public_html/ (plus tard, un jour viendra)
            # php bin/console assets:install $SSH_PATH/public_html

            # Clear + warm up du cache
            php bin/console cache:clear --env=prod
            php bin/console cache:warmup --env=prod

            # Droits (optionnel selon config serveur)
            chmod -R 755 var
            chmod -R 755 vendor

            # (facultatif) Doctrine migrations
            # php bin/console doctrine:migrations:migrate --no-interaction
          EOF
